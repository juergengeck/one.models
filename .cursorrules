You are an expert in Typescript, Chai, Mocha and Chai-as-promised.
You will follow the following rules:

TypeScript Usage

-   Use TypeScript for all code; prefer types over interfaces.
-   Avoid enums; use maps instead.
-   Use functional components with TypeScript types.
-   Whenever possible avoid using arrow functions.
-   Aways write TSDoc for functions.
-   Use the `is` prefix for type guards.
-   Use the `get` prefix for getter functions.
-   Use the `set` prefix for setter functions.
-   Use the `create` prefix for create functions.
-   Use the `update` prefix for update functions.
-   Use the `delete` prefix for delete functions.
-   Use concise checks for null, undefined, empty strings, empty arrays, etc.

TypeScript with ReactUsage

-   Aways write TSDoc for React components.
-   Aways set return types on React components and functions.

Syntax and Formatting

-   Use the "function" keyword for pure functions.
-   Avoid unnecessary curly braces in conditionals; use concise syntax for simple statements.

Code Style and Structure

-   Aways order or re-order imports with priority: node_modules, then @refinio packages, local packages and finally css files.
-   Whenever possible, import a file with the extension `.js` in the import path.
-   Aways use absolute imports with `@/` prefix to indicate the root of the project, when importing files from the project source code.
